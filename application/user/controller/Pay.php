<?php
/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2018/7/10
 * Time: 11:39
 */
namespace app\user\controller;

use think\Controller;
use app\common\model\UserOrder;
class Pay extends Controller{
    /* 正式配置
        const APPID = 'wx109a9c28c866c246';
        const MCHID = '1508905001';
        const KEY = 'heyabotouzizhe17qq22960119513341';
         */
    //=========以下是测试配置============
    public $APPID = 'wx426b3015555a46be';
    public $MCHID = '1900009851';
    public $KEY = '8934e7d15453e97507ef794cf7b0519d';
    public $userOrder;
    public $url="https://api.mch.weixin.qq.com/pay/unifiedorder";
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this->userOrder=new UserOrder();
    }

    public function wxpay($conf){
        $conf['appid']=$this->APPID;
        $conf['mch_id']=$this->MCHID;
        $conf['nonce_str']=$this->getNonceStr();
        $conf['product_id']='123456789';
        $conf['spbill_create_ip']=$_SERVER['REMOTE_ADDR'];
        $conf['notify_url']='';



        $conf['sign']=$this->MakeSign($conf);
        $this->userOrder->where('order_number',$conf['out_trade_no'])->setField('sign',$conf['sign']);
        dump($conf);

        $xml=$this->ToXml($conf);
        dump($xml);
        $data=$this->curl_get_http($this->url,$xml);

        dump($data);
    }

    //使用post
    function curl_get_http($url,$post_data){
        //初始化
        $curl = curl_init();
        //设置抓取的url
        curl_setopt($curl, CURLOPT_URL, $url);
        //设置获取的信息以文件流的形式返回，而不是直接输出。
        curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);
        //设置post方式提交
        curl_setopt($curl, CURLOPT_POST, 1);
        //设置post数据

        curl_setopt($curl, CURLOPT_POSTFIELDS, $post_data);
        //执行命令
        $data = curl_exec($curl);

        //显示获得的数据
        return $data;

    }
    /**
     *
     * 产生随机字符串，不长于32位
     * @param int $length
     * @return 产生的随机字符串
     */
    public static function getNonceStr($length = 32)
    {
        $chars = "abcdefghijklmnopqrstuvwxyz0123456789";
        $str ="";
        for ( $i = 0; $i < $length; $i++ )  {
            $str .= substr($chars, mt_rand(0, strlen($chars)-1), 1);
        }
        return $str;
    }
    /**
     * 将xml转为array
     * @param string $xml
     * @throws WxPayException
     */
    public function FromXml($xml)
    {
        if(!$xml){
            throw new WxPayException("xml数据异常！");
        }
        //将XML转为array
        //禁止引用外部xml实体
        libxml_disable_entity_loader(true);
        $this->values = json_decode(json_encode(simplexml_load_string($xml, 'SimpleXMLElement', LIBXML_NOCDATA)), true);
        return $this->values;
    }
    /**
     * 输出xml字符
     * @throws WxPayException
     **/
    public function ToXml($conf)
    {
        if(!is_array($conf)
            || count($conf) <= 0)
        {
            throw new WxPayException("数组数据异常！");
        }

        $xml = "<xml>";
        foreach ($conf as $key=>$val)
        {
            if (is_numeric($val)){
                $xml.="<".$key.">".$val."</".$key.">";
            }else{
                $xml.="<".$key."><![CDATA[".$val."]]></".$key.">";
            }
        }
        $xml.="</xml>";
        return $xml;
    }

    /**
     * 生成签名
     * @return 签名，本函数不覆盖sign成员变量，如要设置签名需要调用SetSign方法赋值
     */
    public function MakeSign($conf)
    {
        //签名步骤一：按字典序排序参数
        ksort($conf);
        $string = $this->ToUrlParams($conf);
        //签名步骤二：在string后加入KEY
        $string = $string . "&key=".$this->KEY;
        //签名步骤三：MD5加密
        $string = md5($string);
        //签名步骤四：所有字符转为大写
        $result = strtoupper($string);
        return $result;
    }
    /**
     *
     * 参数数组转换为url参数
     * @param array $urlObj
     */
    private function ToUrlParams($urlObj)
    {
        $buff = "";
        foreach ($urlObj as $k => $v)
        {
            $buff .= $k . "=" . $v . "&";
        }

        $buff = trim($buff, "&");
        return $buff;
    }
}